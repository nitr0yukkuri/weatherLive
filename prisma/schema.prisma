// prisma/schema.prisma

// --- 変更ここから ---
datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// アイテムのマスターデータ
model Item {
  id          Int             @id @default(autoincrement())
  name        String          @unique
  description String
  rarity      String          @default("normal")
  iconName    String?
  weather     String?
  stage       String?
  inventories UserInventory[]
}

// ユーザーの実績進捗 (元の単一ユーザー形式に戻す)
model UserProgress {
  id        Int @id @default(1) // ★ id: 1 で固定
  walkCount Int @default(0) // 既存: 総おさんぽ回数

  // --- ▼▼▼ ここから追加 ▼▼▼ ---
  // 天気別おさんぽ回数
  sunnyWalkCount         Int @default(0)
  clearWalkCount         Int @default(0)
  rainyWalkCount         Int @default(0)
  cloudyWalkCount        Int @default(0)
  snowyWalkCount         Int @default(0)
  thunderstormWalkCount  Int @default(0)
  windyWalkCount         Int @default(0)
  nightWalkCount         Int @default(0)

  // アイテム収集関連 (種類数)
  collectedItemTypesCount       Int @default(0) // 集めたアイテムの種類数
  collectedNormalItemTypesCount   Int @default(0)
  collectedUncommonItemTypesCount Int @default(0)
  collectedRareItemTypesCount     Int @default(0)
  collectedEpicItemTypesCount     Int @default(0)
  collectedLegendaryItemTypesCount Int @default(0)

  // アイテム収集関連 (総数) - 必要であれば追加
  // collectedTotalItemCount Int @default(0) // 集めたアイテムの総数

  // 連続おさんぽ記録
  consecutiveWalkDays Int      @default(0)
  lastWalkDate        DateTime? // 最後におさんぽした日時
  // --- ▲▲▲ 追加ここまで ▲▲▲ ---
}

// ユーザーのアイテム所持状況 (元の単一ユーザー形式に戻す)
model UserInventory {
  id       Int  @id @default(autoincrement())
  itemId   Int  @unique // ★ itemId を unique に戻す
  quantity Int  @default(0)
  item     Item @relation(fields: [itemId], references: [id])
}

// ★ User, Account, Session, VerificationToken モデルは削除済み
// --- 変更ここまで ---